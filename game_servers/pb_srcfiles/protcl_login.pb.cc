// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protcl_login.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "protcl_login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protos {

namespace {

const ::google::protobuf::Descriptor* req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_reflection_ = NULL;
const ::google::protobuf::Descriptor* rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_reflection_ = NULL;
const ::google::protobuf::Descriptor* role_snapshot_t_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  role_snapshot_t_reflection_ = NULL;
const ::google::protobuf::Descriptor* req_E_LOGIN_MSG_C2S_LOGIN_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  req_E_LOGIN_MSG_C2S_LOGIN_reflection_ = NULL;
const ::google::protobuf::Descriptor* rep_E_LOGIN_MSG_C2S_LOGIN_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  rep_E_LOGIN_MSG_C2S_LOGIN_reflection_ = NULL;
const ::google::protobuf::Descriptor* req_E_LOGIN_MSG_GG2ROOT_LOGIN_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  req_E_LOGIN_MSG_GG2ROOT_LOGIN_reflection_ = NULL;
const ::google::protobuf::Descriptor* rep_E_LOGIN_MSG_GG2ROOT_LOGIN_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  rep_E_LOGIN_MSG_GG2ROOT_LOGIN_reflection_ = NULL;
const ::google::protobuf::Descriptor* req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_reflection_ = NULL;
const ::google::protobuf::Descriptor* rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_protcl_5flogin_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_protcl_5flogin_2eproto() {
  protobuf_AddDesc_protcl_5flogin_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "protcl_login.proto");
  GOOGLE_CHECK(file != NULL);
  req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_descriptor_ = file->message_type(0);
  static const int req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT, account_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT, pswd_),
  };
  req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_descriptor_,
      req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::default_instance_,
      req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_offsets_,
      -1,
      -1,
      -1,
      sizeof(req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT, _is_default_instance_));
  rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_descriptor_ = file->message_type(1);
  static const int rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT, isok_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT, account_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT, pswd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT, account_id_),
  };
  rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_descriptor_,
      rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::default_instance_,
      rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_offsets_,
      -1,
      -1,
      -1,
      sizeof(rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT, _is_default_instance_));
  role_snapshot_t_descriptor_ = file->message_type(2);
  static const int role_snapshot_t_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_snapshot_t, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_snapshot_t, nickname_),
  };
  role_snapshot_t_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      role_snapshot_t_descriptor_,
      role_snapshot_t::default_instance_,
      role_snapshot_t_offsets_,
      -1,
      -1,
      -1,
      sizeof(role_snapshot_t),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_snapshot_t, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_snapshot_t, _is_default_instance_));
  req_E_LOGIN_MSG_C2S_LOGIN_descriptor_ = file->message_type(3);
  static const int req_E_LOGIN_MSG_C2S_LOGIN_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_E_LOGIN_MSG_C2S_LOGIN, account_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_E_LOGIN_MSG_C2S_LOGIN, pswd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_E_LOGIN_MSG_C2S_LOGIN, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_E_LOGIN_MSG_C2S_LOGIN, zone_id_),
  };
  req_E_LOGIN_MSG_C2S_LOGIN_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      req_E_LOGIN_MSG_C2S_LOGIN_descriptor_,
      req_E_LOGIN_MSG_C2S_LOGIN::default_instance_,
      req_E_LOGIN_MSG_C2S_LOGIN_offsets_,
      -1,
      -1,
      -1,
      sizeof(req_E_LOGIN_MSG_C2S_LOGIN),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_E_LOGIN_MSG_C2S_LOGIN, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_E_LOGIN_MSG_C2S_LOGIN, _is_default_instance_));
  rep_E_LOGIN_MSG_C2S_LOGIN_descriptor_ = file->message_type(4);
  static const int rep_E_LOGIN_MSG_C2S_LOGIN_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rep_E_LOGIN_MSG_C2S_LOGIN, isok_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rep_E_LOGIN_MSG_C2S_LOGIN, role_list_),
  };
  rep_E_LOGIN_MSG_C2S_LOGIN_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      rep_E_LOGIN_MSG_C2S_LOGIN_descriptor_,
      rep_E_LOGIN_MSG_C2S_LOGIN::default_instance_,
      rep_E_LOGIN_MSG_C2S_LOGIN_offsets_,
      -1,
      -1,
      -1,
      sizeof(rep_E_LOGIN_MSG_C2S_LOGIN),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rep_E_LOGIN_MSG_C2S_LOGIN, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rep_E_LOGIN_MSG_C2S_LOGIN, _is_default_instance_));
  req_E_LOGIN_MSG_GG2ROOT_LOGIN_descriptor_ = file->message_type(5);
  static const int req_E_LOGIN_MSG_GG2ROOT_LOGIN_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_E_LOGIN_MSG_GG2ROOT_LOGIN, account_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_E_LOGIN_MSG_GG2ROOT_LOGIN, pswd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_E_LOGIN_MSG_GG2ROOT_LOGIN, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_E_LOGIN_MSG_GG2ROOT_LOGIN, zone_id_),
  };
  req_E_LOGIN_MSG_GG2ROOT_LOGIN_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      req_E_LOGIN_MSG_GG2ROOT_LOGIN_descriptor_,
      req_E_LOGIN_MSG_GG2ROOT_LOGIN::default_instance_,
      req_E_LOGIN_MSG_GG2ROOT_LOGIN_offsets_,
      -1,
      -1,
      -1,
      sizeof(req_E_LOGIN_MSG_GG2ROOT_LOGIN),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_E_LOGIN_MSG_GG2ROOT_LOGIN, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_E_LOGIN_MSG_GG2ROOT_LOGIN, _is_default_instance_));
  rep_E_LOGIN_MSG_GG2ROOT_LOGIN_descriptor_ = file->message_type(6);
  static const int rep_E_LOGIN_MSG_GG2ROOT_LOGIN_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rep_E_LOGIN_MSG_GG2ROOT_LOGIN, isok_),
  };
  rep_E_LOGIN_MSG_GG2ROOT_LOGIN_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      rep_E_LOGIN_MSG_GG2ROOT_LOGIN_descriptor_,
      rep_E_LOGIN_MSG_GG2ROOT_LOGIN::default_instance_,
      rep_E_LOGIN_MSG_GG2ROOT_LOGIN_offsets_,
      -1,
      -1,
      -1,
      sizeof(rep_E_LOGIN_MSG_GG2ROOT_LOGIN),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rep_E_LOGIN_MSG_GG2ROOT_LOGIN, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rep_E_LOGIN_MSG_GG2ROOT_LOGIN, _is_default_instance_));
  req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_descriptor_ = file->message_type(7);
  static const int req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK, account_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK, pswd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK, account_id_),
  };
  req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_descriptor_,
      req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::default_instance_,
      req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_offsets_,
      -1,
      -1,
      -1,
      sizeof(req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK, _is_default_instance_));
  rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_descriptor_ = file->message_type(8);
  static const int rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK, isok_),
  };
  rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_descriptor_,
      rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::default_instance_,
      rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_offsets_,
      -1,
      -1,
      -1,
      sizeof(rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_protcl_5flogin_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_descriptor_, &req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_descriptor_, &rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      role_snapshot_t_descriptor_, &role_snapshot_t::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      req_E_LOGIN_MSG_C2S_LOGIN_descriptor_, &req_E_LOGIN_MSG_C2S_LOGIN::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      rep_E_LOGIN_MSG_C2S_LOGIN_descriptor_, &rep_E_LOGIN_MSG_C2S_LOGIN::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      req_E_LOGIN_MSG_GG2ROOT_LOGIN_descriptor_, &req_E_LOGIN_MSG_GG2ROOT_LOGIN::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      rep_E_LOGIN_MSG_GG2ROOT_LOGIN_descriptor_, &rep_E_LOGIN_MSG_GG2ROOT_LOGIN::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_descriptor_, &req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_descriptor_, &rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_protcl_5flogin_2eproto() {
  delete req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::default_instance_;
  delete req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_reflection_;
  delete rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::default_instance_;
  delete rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_reflection_;
  delete role_snapshot_t::default_instance_;
  delete role_snapshot_t_reflection_;
  delete req_E_LOGIN_MSG_C2S_LOGIN::default_instance_;
  delete req_E_LOGIN_MSG_C2S_LOGIN_reflection_;
  delete rep_E_LOGIN_MSG_C2S_LOGIN::default_instance_;
  delete rep_E_LOGIN_MSG_C2S_LOGIN_reflection_;
  delete req_E_LOGIN_MSG_GG2ROOT_LOGIN::default_instance_;
  delete req_E_LOGIN_MSG_GG2ROOT_LOGIN_reflection_;
  delete rep_E_LOGIN_MSG_GG2ROOT_LOGIN::default_instance_;
  delete rep_E_LOGIN_MSG_GG2ROOT_LOGIN_reflection_;
  delete req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::default_instance_;
  delete req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_reflection_;
  delete rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::default_instance_;
  delete rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_reflection_;
}

void protobuf_AddDesc_protcl_5flogin_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_protcl_5flogin_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022protcl_login.proto\022\006protos\"J\n$req_E_LO"
    "GIN_MSG_C2S_REGISTER_ACCOUNT\022\024\n\014account_"
    "name\030\001 \001(\t\022\014\n\004pswd\030\002 \001(\t\"l\n$rep_E_LOGIN_"
    "MSG_C2S_REGISTER_ACCOUNT\022\014\n\004isok\030\001 \001(\005\022\024"
    "\n\014account_name\030\002 \001(\t\022\014\n\004pswd\030\003 \001(\t\022\022\n\nac"
    "count_id\030\004 \001(\003\"4\n\017role_snapshot_t\022\017\n\007rol"
    "e_id\030\001 \001(\003\022\020\n\010nickname\030\002 \001(\t\"d\n\031req_E_LO"
    "GIN_MSG_C2S_LOGIN\022\024\n\014account_name\030\001 \001(\t\022"
    "\014\n\004pswd\030\002 \001(\t\022\022\n\naccount_id\030\003 \001(\003\022\017\n\007zon"
    "e_id\030\004 \001(\005\"U\n\031rep_E_LOGIN_MSG_C2S_LOGIN\022"
    "\014\n\004isok\030\001 \001(\005\022*\n\trole_list\030\002 \003(\0132\027.proto"
    "s.role_snapshot_t\"h\n\035req_E_LOGIN_MSG_GG2"
    "ROOT_LOGIN\022\024\n\014account_name\030\001 \001(\t\022\014\n\004pswd"
    "\030\002 \001(\t\022\022\n\naccount_id\030\003 \001(\003\022\017\n\007zone_id\030\004 "
    "\001(\005\"-\n\035rep_E_LOGIN_MSG_GG2ROOT_LOGIN\022\014\n\004"
    "isok\030\001 \001(\005\"_\n%req_E_LOGIN_MSG_ROOT2LOGIN"
    "_ACCT_CHECK\022\024\n\014account_name\030\001 \001(\t\022\014\n\004psw"
    "d\030\002 \001(\t\022\022\n\naccount_id\030\003 \001(\003\"5\n%rep_E_LOG"
    "IN_MSG_ROOT2LOGIN_ACCT_CHECK\022\014\n\004isok\030\001 \001"
    "(\005b\006proto3", 770);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protcl_login.proto", &protobuf_RegisterTypes);
  req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::default_instance_ = new req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT();
  rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::default_instance_ = new rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT();
  role_snapshot_t::default_instance_ = new role_snapshot_t();
  req_E_LOGIN_MSG_C2S_LOGIN::default_instance_ = new req_E_LOGIN_MSG_C2S_LOGIN();
  rep_E_LOGIN_MSG_C2S_LOGIN::default_instance_ = new rep_E_LOGIN_MSG_C2S_LOGIN();
  req_E_LOGIN_MSG_GG2ROOT_LOGIN::default_instance_ = new req_E_LOGIN_MSG_GG2ROOT_LOGIN();
  rep_E_LOGIN_MSG_GG2ROOT_LOGIN::default_instance_ = new rep_E_LOGIN_MSG_GG2ROOT_LOGIN();
  req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::default_instance_ = new req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK();
  rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::default_instance_ = new rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK();
  req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::default_instance_->InitAsDefaultInstance();
  rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::default_instance_->InitAsDefaultInstance();
  role_snapshot_t::default_instance_->InitAsDefaultInstance();
  req_E_LOGIN_MSG_C2S_LOGIN::default_instance_->InitAsDefaultInstance();
  rep_E_LOGIN_MSG_C2S_LOGIN::default_instance_->InitAsDefaultInstance();
  req_E_LOGIN_MSG_GG2ROOT_LOGIN::default_instance_->InitAsDefaultInstance();
  rep_E_LOGIN_MSG_GG2ROOT_LOGIN::default_instance_->InitAsDefaultInstance();
  req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::default_instance_->InitAsDefaultInstance();
  rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_protcl_5flogin_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_protcl_5flogin_2eproto {
  StaticDescriptorInitializer_protcl_5flogin_2eproto() {
    protobuf_AddDesc_protcl_5flogin_2eproto();
  }
} static_descriptor_initializer_protcl_5flogin_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::kAccountNameFieldNumber;
const int req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::kPswdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
}

void req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT(const req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
}

void req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pswd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::~req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT() {
  // @@protoc_insertion_point(destructor:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  SharedDtor();
}

void req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pswd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_descriptor_;
}

const req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT& req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protcl_5flogin_2eproto();
  return *default_instance_;
}

req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT* req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::default_instance_ = NULL;

req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT* req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::New(::google::protobuf::Arena* arena) const {
  req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT* n = new req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.account_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pswd;
        break;
      }

      // optional string pswd = 2;
      case 2: {
        if (tag == 18) {
         parse_pswd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pswd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pswd().data(), this->pswd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.pswd"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  return false;
#undef DO_
}

void req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_name(), output);
  }

  // optional string pswd = 2;
  if (this->pswd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pswd().data(), this->pswd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.pswd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pswd(), output);
  }

  // @@protoc_insertion_point(serialize_end:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
}

::google::protobuf::uint8* req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_name(), target);
  }

  // optional string pswd = 2;
  if (this->pswd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pswd().data(), this->pswd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.pswd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pswd(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  return target;
}

int req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  int total_size = 0;

  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_name());
  }

  // optional string pswd = 2;
  if (this->pswd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pswd());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
    MergeFrom(*source);
  }
}

void req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::MergeFrom(const req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.account_name().size() > 0) {

    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  if (from.pswd().size() > 0) {

    pswd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pswd_);
  }
}

void req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::CopyFrom(const req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::IsInitialized() const {

  return true;
}

void req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::Swap(req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::InternalSwap(req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT* other) {
  account_name_.Swap(&other->account_name_);
  pswd_.Swap(&other->pswd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_descriptor_;
  metadata.reflection = req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT

// optional string account_name = 1;
void req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::account_name() const {
  // @@protoc_insertion_point(field_get:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.account_name)
  return account_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.account_name)
}
 void req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::set_account_name(const char* value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.account_name)
}
 void req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.account_name)
}
 ::std::string* req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::release_account_name() {
  // @@protoc_insertion_point(field_release:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.account_name)
}

// optional string pswd = 2;
void req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::clear_pswd() {
  pswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::pswd() const {
  // @@protoc_insertion_point(field_get:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.pswd)
  return pswd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::set_pswd(const ::std::string& value) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.pswd)
}
 void req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::set_pswd(const char* value) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.pswd)
}
 void req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::set_pswd(const char* value, size_t size) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.pswd)
}
 ::std::string* req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::mutable_pswd() {
  
  // @@protoc_insertion_point(field_mutable:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.pswd)
  return pswd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::release_pswd() {
  // @@protoc_insertion_point(field_release:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.pswd)
  
  return pswd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::set_allocated_pswd(::std::string* pswd) {
  if (pswd != NULL) {
    
  } else {
    
  }
  pswd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pswd);
  // @@protoc_insertion_point(field_set_allocated:protos.req_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.pswd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::kIsokFieldNumber;
const int rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::kAccountNameFieldNumber;
const int rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::kPswdFieldNumber;
const int rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::kAccountIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
}

void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT(const rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
}

void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  isok_ = 0;
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pswd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_ = GOOGLE_LONGLONG(0);
}

rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::~rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT() {
  // @@protoc_insertion_point(destructor:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  SharedDtor();
}

void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pswd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_descriptor_;
}

const rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT& rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protcl_5flogin_2eproto();
  return *default_instance_;
}

rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT* rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::default_instance_ = NULL;

rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT* rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::New(::google::protobuf::Arena* arena) const {
  rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT* n = new rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(account_id_, isok_);
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 isok = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isok_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_account_name;
        break;
      }

      // optional string account_name = 2;
      case 2: {
        if (tag == 18) {
         parse_account_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.account_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pswd;
        break;
      }

      // optional string pswd = 3;
      case 3: {
        if (tag == 26) {
         parse_pswd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pswd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pswd().data(), this->pswd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.pswd"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_account_id;
        break;
      }

      // optional int64 account_id = 4;
      case 4: {
        if (tag == 32) {
         parse_account_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &account_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  return false;
#undef DO_
}

void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  // optional int32 isok = 1;
  if (this->isok() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->isok(), output);
  }

  // optional string account_name = 2;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account_name(), output);
  }

  // optional string pswd = 3;
  if (this->pswd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pswd().data(), this->pswd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.pswd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pswd(), output);
  }

  // optional int64 account_id = 4;
  if (this->account_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->account_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
}

::google::protobuf::uint8* rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  // optional int32 isok = 1;
  if (this->isok() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->isok(), target);
  }

  // optional string account_name = 2;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account_name(), target);
  }

  // optional string pswd = 3;
  if (this->pswd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pswd().data(), this->pswd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.pswd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pswd(), target);
  }

  // optional int64 account_id = 4;
  if (this->account_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->account_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  return target;
}

int rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  int total_size = 0;

  // optional int32 isok = 1;
  if (this->isok() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isok());
  }

  // optional string account_name = 2;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_name());
  }

  // optional string pswd = 3;
  if (this->pswd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pswd());
  }

  // optional int64 account_id = 4;
  if (this->account_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->account_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
    MergeFrom(*source);
  }
}

void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::MergeFrom(const rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.isok() != 0) {
    set_isok(from.isok());
  }
  if (from.account_name().size() > 0) {

    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  if (from.pswd().size() > 0) {

    pswd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pswd_);
  }
  if (from.account_id() != 0) {
    set_account_id(from.account_id());
  }
}

void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::CopyFrom(const rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::IsInitialized() const {

  return true;
}

void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::Swap(rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::InternalSwap(rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT* other) {
  std::swap(isok_, other->isok_);
  account_name_.Swap(&other->account_name_);
  pswd_.Swap(&other->pswd_);
  std::swap(account_id_, other->account_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_descriptor_;
  metadata.reflection = rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT

// optional int32 isok = 1;
void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::clear_isok() {
  isok_ = 0;
}
 ::google::protobuf::int32 rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::isok() const {
  // @@protoc_insertion_point(field_get:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.isok)
  return isok_;
}
 void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::set_isok(::google::protobuf::int32 value) {
  
  isok_ = value;
  // @@protoc_insertion_point(field_set:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.isok)
}

// optional string account_name = 2;
void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::account_name() const {
  // @@protoc_insertion_point(field_get:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.account_name)
  return account_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.account_name)
}
 void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::set_account_name(const char* value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.account_name)
}
 void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.account_name)
}
 ::std::string* rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::release_account_name() {
  // @@protoc_insertion_point(field_release:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.account_name)
}

// optional string pswd = 3;
void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::clear_pswd() {
  pswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::pswd() const {
  // @@protoc_insertion_point(field_get:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.pswd)
  return pswd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::set_pswd(const ::std::string& value) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.pswd)
}
 void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::set_pswd(const char* value) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.pswd)
}
 void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::set_pswd(const char* value, size_t size) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.pswd)
}
 ::std::string* rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::mutable_pswd() {
  
  // @@protoc_insertion_point(field_mutable:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.pswd)
  return pswd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::release_pswd() {
  // @@protoc_insertion_point(field_release:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.pswd)
  
  return pswd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::set_allocated_pswd(::std::string* pswd) {
  if (pswd != NULL) {
    
  } else {
    
  }
  pswd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pswd);
  // @@protoc_insertion_point(field_set_allocated:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.pswd)
}

// optional int64 account_id = 4;
void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::clear_account_id() {
  account_id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::account_id() const {
  // @@protoc_insertion_point(field_get:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.account_id)
  return account_id_;
}
 void rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT::set_account_id(::google::protobuf::int64 value) {
  
  account_id_ = value;
  // @@protoc_insertion_point(field_set:protos.rep_E_LOGIN_MSG_C2S_REGISTER_ACCOUNT.account_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int role_snapshot_t::kRoleIdFieldNumber;
const int role_snapshot_t::kNicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

role_snapshot_t::role_snapshot_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.role_snapshot_t)
}

void role_snapshot_t::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

role_snapshot_t::role_snapshot_t(const role_snapshot_t& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protos.role_snapshot_t)
}

void role_snapshot_t::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

role_snapshot_t::~role_snapshot_t() {
  // @@protoc_insertion_point(destructor:protos.role_snapshot_t)
  SharedDtor();
}

void role_snapshot_t::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void role_snapshot_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* role_snapshot_t::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return role_snapshot_t_descriptor_;
}

const role_snapshot_t& role_snapshot_t::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protcl_5flogin_2eproto();
  return *default_instance_;
}

role_snapshot_t* role_snapshot_t::default_instance_ = NULL;

role_snapshot_t* role_snapshot_t::New(::google::protobuf::Arena* arena) const {
  role_snapshot_t* n = new role_snapshot_t;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void role_snapshot_t::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.role_snapshot_t)
  role_id_ = GOOGLE_LONGLONG(0);
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool role_snapshot_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.role_snapshot_t)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_nickname;
        break;
      }

      // optional string nickname = 2;
      case 2: {
        if (tag == 18) {
         parse_nickname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.role_snapshot_t.nickname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.role_snapshot_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.role_snapshot_t)
  return false;
#undef DO_
}

void role_snapshot_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.role_snapshot_t)
  // optional int64 role_id = 1;
  if (this->role_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }

  // optional string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.role_snapshot_t.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  // @@protoc_insertion_point(serialize_end:protos.role_snapshot_t)
}

::google::protobuf::uint8* role_snapshot_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.role_snapshot_t)
  // optional int64 role_id = 1;
  if (this->role_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }

  // optional string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.role_snapshot_t.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protos.role_snapshot_t)
  return target;
}

int role_snapshot_t::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protos.role_snapshot_t)
  int total_size = 0;

  // optional int64 role_id = 1;
  if (this->role_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->role_id());
  }

  // optional string nickname = 2;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void role_snapshot_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.role_snapshot_t)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const role_snapshot_t* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const role_snapshot_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.role_snapshot_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.role_snapshot_t)
    MergeFrom(*source);
  }
}

void role_snapshot_t::MergeFrom(const role_snapshot_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.role_snapshot_t)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.role_id() != 0) {
    set_role_id(from.role_id());
  }
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
}

void role_snapshot_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.role_snapshot_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void role_snapshot_t::CopyFrom(const role_snapshot_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.role_snapshot_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool role_snapshot_t::IsInitialized() const {

  return true;
}

void role_snapshot_t::Swap(role_snapshot_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void role_snapshot_t::InternalSwap(role_snapshot_t* other) {
  std::swap(role_id_, other->role_id_);
  nickname_.Swap(&other->nickname_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata role_snapshot_t::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = role_snapshot_t_descriptor_;
  metadata.reflection = role_snapshot_t_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// role_snapshot_t

// optional int64 role_id = 1;
void role_snapshot_t::clear_role_id() {
  role_id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 role_snapshot_t::role_id() const {
  // @@protoc_insertion_point(field_get:protos.role_snapshot_t.role_id)
  return role_id_;
}
 void role_snapshot_t::set_role_id(::google::protobuf::int64 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:protos.role_snapshot_t.role_id)
}

// optional string nickname = 2;
void role_snapshot_t::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& role_snapshot_t::nickname() const {
  // @@protoc_insertion_point(field_get:protos.role_snapshot_t.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void role_snapshot_t::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.role_snapshot_t.nickname)
}
 void role_snapshot_t::set_nickname(const char* value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.role_snapshot_t.nickname)
}
 void role_snapshot_t::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.role_snapshot_t.nickname)
}
 ::std::string* role_snapshot_t::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:protos.role_snapshot_t.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* role_snapshot_t::release_nickname() {
  // @@protoc_insertion_point(field_release:protos.role_snapshot_t.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void role_snapshot_t::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:protos.role_snapshot_t.nickname)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_E_LOGIN_MSG_C2S_LOGIN::kAccountNameFieldNumber;
const int req_E_LOGIN_MSG_C2S_LOGIN::kPswdFieldNumber;
const int req_E_LOGIN_MSG_C2S_LOGIN::kAccountIdFieldNumber;
const int req_E_LOGIN_MSG_C2S_LOGIN::kZoneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_E_LOGIN_MSG_C2S_LOGIN::req_E_LOGIN_MSG_C2S_LOGIN()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.req_E_LOGIN_MSG_C2S_LOGIN)
}

void req_E_LOGIN_MSG_C2S_LOGIN::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

req_E_LOGIN_MSG_C2S_LOGIN::req_E_LOGIN_MSG_C2S_LOGIN(const req_E_LOGIN_MSG_C2S_LOGIN& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protos.req_E_LOGIN_MSG_C2S_LOGIN)
}

void req_E_LOGIN_MSG_C2S_LOGIN::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pswd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_ = GOOGLE_LONGLONG(0);
  zone_id_ = 0;
}

req_E_LOGIN_MSG_C2S_LOGIN::~req_E_LOGIN_MSG_C2S_LOGIN() {
  // @@protoc_insertion_point(destructor:protos.req_E_LOGIN_MSG_C2S_LOGIN)
  SharedDtor();
}

void req_E_LOGIN_MSG_C2S_LOGIN::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pswd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void req_E_LOGIN_MSG_C2S_LOGIN::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_E_LOGIN_MSG_C2S_LOGIN::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return req_E_LOGIN_MSG_C2S_LOGIN_descriptor_;
}

const req_E_LOGIN_MSG_C2S_LOGIN& req_E_LOGIN_MSG_C2S_LOGIN::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protcl_5flogin_2eproto();
  return *default_instance_;
}

req_E_LOGIN_MSG_C2S_LOGIN* req_E_LOGIN_MSG_C2S_LOGIN::default_instance_ = NULL;

req_E_LOGIN_MSG_C2S_LOGIN* req_E_LOGIN_MSG_C2S_LOGIN::New(::google::protobuf::Arena* arena) const {
  req_E_LOGIN_MSG_C2S_LOGIN* n = new req_E_LOGIN_MSG_C2S_LOGIN;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_E_LOGIN_MSG_C2S_LOGIN::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.req_E_LOGIN_MSG_C2S_LOGIN)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(req_E_LOGIN_MSG_C2S_LOGIN, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<req_E_LOGIN_MSG_C2S_LOGIN*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(account_id_, zone_id_);
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool req_E_LOGIN_MSG_C2S_LOGIN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.req_E_LOGIN_MSG_C2S_LOGIN)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.req_E_LOGIN_MSG_C2S_LOGIN.account_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pswd;
        break;
      }

      // optional string pswd = 2;
      case 2: {
        if (tag == 18) {
         parse_pswd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pswd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pswd().data(), this->pswd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.req_E_LOGIN_MSG_C2S_LOGIN.pswd"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_account_id;
        break;
      }

      // optional int64 account_id = 3;
      case 3: {
        if (tag == 24) {
         parse_account_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &account_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_zone_id;
        break;
      }

      // optional int32 zone_id = 4;
      case 4: {
        if (tag == 32) {
         parse_zone_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &zone_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.req_E_LOGIN_MSG_C2S_LOGIN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.req_E_LOGIN_MSG_C2S_LOGIN)
  return false;
#undef DO_
}

void req_E_LOGIN_MSG_C2S_LOGIN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.req_E_LOGIN_MSG_C2S_LOGIN)
  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.req_E_LOGIN_MSG_C2S_LOGIN.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_name(), output);
  }

  // optional string pswd = 2;
  if (this->pswd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pswd().data(), this->pswd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.req_E_LOGIN_MSG_C2S_LOGIN.pswd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pswd(), output);
  }

  // optional int64 account_id = 3;
  if (this->account_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->account_id(), output);
  }

  // optional int32 zone_id = 4;
  if (this->zone_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->zone_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:protos.req_E_LOGIN_MSG_C2S_LOGIN)
}

::google::protobuf::uint8* req_E_LOGIN_MSG_C2S_LOGIN::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.req_E_LOGIN_MSG_C2S_LOGIN)
  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.req_E_LOGIN_MSG_C2S_LOGIN.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_name(), target);
  }

  // optional string pswd = 2;
  if (this->pswd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pswd().data(), this->pswd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.req_E_LOGIN_MSG_C2S_LOGIN.pswd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pswd(), target);
  }

  // optional int64 account_id = 3;
  if (this->account_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->account_id(), target);
  }

  // optional int32 zone_id = 4;
  if (this->zone_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->zone_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protos.req_E_LOGIN_MSG_C2S_LOGIN)
  return target;
}

int req_E_LOGIN_MSG_C2S_LOGIN::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protos.req_E_LOGIN_MSG_C2S_LOGIN)
  int total_size = 0;

  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_name());
  }

  // optional string pswd = 2;
  if (this->pswd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pswd());
  }

  // optional int64 account_id = 3;
  if (this->account_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->account_id());
  }

  // optional int32 zone_id = 4;
  if (this->zone_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->zone_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_E_LOGIN_MSG_C2S_LOGIN::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.req_E_LOGIN_MSG_C2S_LOGIN)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const req_E_LOGIN_MSG_C2S_LOGIN* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const req_E_LOGIN_MSG_C2S_LOGIN>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.req_E_LOGIN_MSG_C2S_LOGIN)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.req_E_LOGIN_MSG_C2S_LOGIN)
    MergeFrom(*source);
  }
}

void req_E_LOGIN_MSG_C2S_LOGIN::MergeFrom(const req_E_LOGIN_MSG_C2S_LOGIN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.req_E_LOGIN_MSG_C2S_LOGIN)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.account_name().size() > 0) {

    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  if (from.pswd().size() > 0) {

    pswd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pswd_);
  }
  if (from.account_id() != 0) {
    set_account_id(from.account_id());
  }
  if (from.zone_id() != 0) {
    set_zone_id(from.zone_id());
  }
}

void req_E_LOGIN_MSG_C2S_LOGIN::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.req_E_LOGIN_MSG_C2S_LOGIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_E_LOGIN_MSG_C2S_LOGIN::CopyFrom(const req_E_LOGIN_MSG_C2S_LOGIN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.req_E_LOGIN_MSG_C2S_LOGIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_E_LOGIN_MSG_C2S_LOGIN::IsInitialized() const {

  return true;
}

void req_E_LOGIN_MSG_C2S_LOGIN::Swap(req_E_LOGIN_MSG_C2S_LOGIN* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_E_LOGIN_MSG_C2S_LOGIN::InternalSwap(req_E_LOGIN_MSG_C2S_LOGIN* other) {
  account_name_.Swap(&other->account_name_);
  pswd_.Swap(&other->pswd_);
  std::swap(account_id_, other->account_id_);
  std::swap(zone_id_, other->zone_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_E_LOGIN_MSG_C2S_LOGIN::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = req_E_LOGIN_MSG_C2S_LOGIN_descriptor_;
  metadata.reflection = req_E_LOGIN_MSG_C2S_LOGIN_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_E_LOGIN_MSG_C2S_LOGIN

// optional string account_name = 1;
void req_E_LOGIN_MSG_C2S_LOGIN::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& req_E_LOGIN_MSG_C2S_LOGIN::account_name() const {
  // @@protoc_insertion_point(field_get:protos.req_E_LOGIN_MSG_C2S_LOGIN.account_name)
  return account_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void req_E_LOGIN_MSG_C2S_LOGIN::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.req_E_LOGIN_MSG_C2S_LOGIN.account_name)
}
 void req_E_LOGIN_MSG_C2S_LOGIN::set_account_name(const char* value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.req_E_LOGIN_MSG_C2S_LOGIN.account_name)
}
 void req_E_LOGIN_MSG_C2S_LOGIN::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.req_E_LOGIN_MSG_C2S_LOGIN.account_name)
}
 ::std::string* req_E_LOGIN_MSG_C2S_LOGIN::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:protos.req_E_LOGIN_MSG_C2S_LOGIN.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* req_E_LOGIN_MSG_C2S_LOGIN::release_account_name() {
  // @@protoc_insertion_point(field_release:protos.req_E_LOGIN_MSG_C2S_LOGIN.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void req_E_LOGIN_MSG_C2S_LOGIN::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:protos.req_E_LOGIN_MSG_C2S_LOGIN.account_name)
}

// optional string pswd = 2;
void req_E_LOGIN_MSG_C2S_LOGIN::clear_pswd() {
  pswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& req_E_LOGIN_MSG_C2S_LOGIN::pswd() const {
  // @@protoc_insertion_point(field_get:protos.req_E_LOGIN_MSG_C2S_LOGIN.pswd)
  return pswd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void req_E_LOGIN_MSG_C2S_LOGIN::set_pswd(const ::std::string& value) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.req_E_LOGIN_MSG_C2S_LOGIN.pswd)
}
 void req_E_LOGIN_MSG_C2S_LOGIN::set_pswd(const char* value) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.req_E_LOGIN_MSG_C2S_LOGIN.pswd)
}
 void req_E_LOGIN_MSG_C2S_LOGIN::set_pswd(const char* value, size_t size) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.req_E_LOGIN_MSG_C2S_LOGIN.pswd)
}
 ::std::string* req_E_LOGIN_MSG_C2S_LOGIN::mutable_pswd() {
  
  // @@protoc_insertion_point(field_mutable:protos.req_E_LOGIN_MSG_C2S_LOGIN.pswd)
  return pswd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* req_E_LOGIN_MSG_C2S_LOGIN::release_pswd() {
  // @@protoc_insertion_point(field_release:protos.req_E_LOGIN_MSG_C2S_LOGIN.pswd)
  
  return pswd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void req_E_LOGIN_MSG_C2S_LOGIN::set_allocated_pswd(::std::string* pswd) {
  if (pswd != NULL) {
    
  } else {
    
  }
  pswd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pswd);
  // @@protoc_insertion_point(field_set_allocated:protos.req_E_LOGIN_MSG_C2S_LOGIN.pswd)
}

// optional int64 account_id = 3;
void req_E_LOGIN_MSG_C2S_LOGIN::clear_account_id() {
  account_id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 req_E_LOGIN_MSG_C2S_LOGIN::account_id() const {
  // @@protoc_insertion_point(field_get:protos.req_E_LOGIN_MSG_C2S_LOGIN.account_id)
  return account_id_;
}
 void req_E_LOGIN_MSG_C2S_LOGIN::set_account_id(::google::protobuf::int64 value) {
  
  account_id_ = value;
  // @@protoc_insertion_point(field_set:protos.req_E_LOGIN_MSG_C2S_LOGIN.account_id)
}

// optional int32 zone_id = 4;
void req_E_LOGIN_MSG_C2S_LOGIN::clear_zone_id() {
  zone_id_ = 0;
}
 ::google::protobuf::int32 req_E_LOGIN_MSG_C2S_LOGIN::zone_id() const {
  // @@protoc_insertion_point(field_get:protos.req_E_LOGIN_MSG_C2S_LOGIN.zone_id)
  return zone_id_;
}
 void req_E_LOGIN_MSG_C2S_LOGIN::set_zone_id(::google::protobuf::int32 value) {
  
  zone_id_ = value;
  // @@protoc_insertion_point(field_set:protos.req_E_LOGIN_MSG_C2S_LOGIN.zone_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rep_E_LOGIN_MSG_C2S_LOGIN::kIsokFieldNumber;
const int rep_E_LOGIN_MSG_C2S_LOGIN::kRoleListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rep_E_LOGIN_MSG_C2S_LOGIN::rep_E_LOGIN_MSG_C2S_LOGIN()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.rep_E_LOGIN_MSG_C2S_LOGIN)
}

void rep_E_LOGIN_MSG_C2S_LOGIN::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

rep_E_LOGIN_MSG_C2S_LOGIN::rep_E_LOGIN_MSG_C2S_LOGIN(const rep_E_LOGIN_MSG_C2S_LOGIN& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protos.rep_E_LOGIN_MSG_C2S_LOGIN)
}

void rep_E_LOGIN_MSG_C2S_LOGIN::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  isok_ = 0;
}

rep_E_LOGIN_MSG_C2S_LOGIN::~rep_E_LOGIN_MSG_C2S_LOGIN() {
  // @@protoc_insertion_point(destructor:protos.rep_E_LOGIN_MSG_C2S_LOGIN)
  SharedDtor();
}

void rep_E_LOGIN_MSG_C2S_LOGIN::SharedDtor() {
  if (this != default_instance_) {
  }
}

void rep_E_LOGIN_MSG_C2S_LOGIN::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rep_E_LOGIN_MSG_C2S_LOGIN::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return rep_E_LOGIN_MSG_C2S_LOGIN_descriptor_;
}

const rep_E_LOGIN_MSG_C2S_LOGIN& rep_E_LOGIN_MSG_C2S_LOGIN::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protcl_5flogin_2eproto();
  return *default_instance_;
}

rep_E_LOGIN_MSG_C2S_LOGIN* rep_E_LOGIN_MSG_C2S_LOGIN::default_instance_ = NULL;

rep_E_LOGIN_MSG_C2S_LOGIN* rep_E_LOGIN_MSG_C2S_LOGIN::New(::google::protobuf::Arena* arena) const {
  rep_E_LOGIN_MSG_C2S_LOGIN* n = new rep_E_LOGIN_MSG_C2S_LOGIN;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rep_E_LOGIN_MSG_C2S_LOGIN::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.rep_E_LOGIN_MSG_C2S_LOGIN)
  isok_ = 0;
  role_list_.Clear();
}

bool rep_E_LOGIN_MSG_C2S_LOGIN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.rep_E_LOGIN_MSG_C2S_LOGIN)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 isok = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isok_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_role_list;
        break;
      }

      // repeated .protos.role_snapshot_t role_list = 2;
      case 2: {
        if (tag == 18) {
         parse_role_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_role_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_role_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_role_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.rep_E_LOGIN_MSG_C2S_LOGIN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.rep_E_LOGIN_MSG_C2S_LOGIN)
  return false;
#undef DO_
}

void rep_E_LOGIN_MSG_C2S_LOGIN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.rep_E_LOGIN_MSG_C2S_LOGIN)
  // optional int32 isok = 1;
  if (this->isok() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->isok(), output);
  }

  // repeated .protos.role_snapshot_t role_list = 2;
  for (unsigned int i = 0, n = this->role_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->role_list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:protos.rep_E_LOGIN_MSG_C2S_LOGIN)
}

::google::protobuf::uint8* rep_E_LOGIN_MSG_C2S_LOGIN::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.rep_E_LOGIN_MSG_C2S_LOGIN)
  // optional int32 isok = 1;
  if (this->isok() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->isok(), target);
  }

  // repeated .protos.role_snapshot_t role_list = 2;
  for (unsigned int i = 0, n = this->role_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->role_list(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protos.rep_E_LOGIN_MSG_C2S_LOGIN)
  return target;
}

int rep_E_LOGIN_MSG_C2S_LOGIN::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protos.rep_E_LOGIN_MSG_C2S_LOGIN)
  int total_size = 0;

  // optional int32 isok = 1;
  if (this->isok() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isok());
  }

  // repeated .protos.role_snapshot_t role_list = 2;
  total_size += 1 * this->role_list_size();
  for (int i = 0; i < this->role_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->role_list(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rep_E_LOGIN_MSG_C2S_LOGIN::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.rep_E_LOGIN_MSG_C2S_LOGIN)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const rep_E_LOGIN_MSG_C2S_LOGIN* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const rep_E_LOGIN_MSG_C2S_LOGIN>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.rep_E_LOGIN_MSG_C2S_LOGIN)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.rep_E_LOGIN_MSG_C2S_LOGIN)
    MergeFrom(*source);
  }
}

void rep_E_LOGIN_MSG_C2S_LOGIN::MergeFrom(const rep_E_LOGIN_MSG_C2S_LOGIN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.rep_E_LOGIN_MSG_C2S_LOGIN)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  role_list_.MergeFrom(from.role_list_);
  if (from.isok() != 0) {
    set_isok(from.isok());
  }
}

void rep_E_LOGIN_MSG_C2S_LOGIN::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.rep_E_LOGIN_MSG_C2S_LOGIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rep_E_LOGIN_MSG_C2S_LOGIN::CopyFrom(const rep_E_LOGIN_MSG_C2S_LOGIN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.rep_E_LOGIN_MSG_C2S_LOGIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rep_E_LOGIN_MSG_C2S_LOGIN::IsInitialized() const {

  return true;
}

void rep_E_LOGIN_MSG_C2S_LOGIN::Swap(rep_E_LOGIN_MSG_C2S_LOGIN* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rep_E_LOGIN_MSG_C2S_LOGIN::InternalSwap(rep_E_LOGIN_MSG_C2S_LOGIN* other) {
  std::swap(isok_, other->isok_);
  role_list_.UnsafeArenaSwap(&other->role_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rep_E_LOGIN_MSG_C2S_LOGIN::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = rep_E_LOGIN_MSG_C2S_LOGIN_descriptor_;
  metadata.reflection = rep_E_LOGIN_MSG_C2S_LOGIN_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rep_E_LOGIN_MSG_C2S_LOGIN

// optional int32 isok = 1;
void rep_E_LOGIN_MSG_C2S_LOGIN::clear_isok() {
  isok_ = 0;
}
 ::google::protobuf::int32 rep_E_LOGIN_MSG_C2S_LOGIN::isok() const {
  // @@protoc_insertion_point(field_get:protos.rep_E_LOGIN_MSG_C2S_LOGIN.isok)
  return isok_;
}
 void rep_E_LOGIN_MSG_C2S_LOGIN::set_isok(::google::protobuf::int32 value) {
  
  isok_ = value;
  // @@protoc_insertion_point(field_set:protos.rep_E_LOGIN_MSG_C2S_LOGIN.isok)
}

// repeated .protos.role_snapshot_t role_list = 2;
int rep_E_LOGIN_MSG_C2S_LOGIN::role_list_size() const {
  return role_list_.size();
}
void rep_E_LOGIN_MSG_C2S_LOGIN::clear_role_list() {
  role_list_.Clear();
}
const ::protos::role_snapshot_t& rep_E_LOGIN_MSG_C2S_LOGIN::role_list(int index) const {
  // @@protoc_insertion_point(field_get:protos.rep_E_LOGIN_MSG_C2S_LOGIN.role_list)
  return role_list_.Get(index);
}
::protos::role_snapshot_t* rep_E_LOGIN_MSG_C2S_LOGIN::mutable_role_list(int index) {
  // @@protoc_insertion_point(field_mutable:protos.rep_E_LOGIN_MSG_C2S_LOGIN.role_list)
  return role_list_.Mutable(index);
}
::protos::role_snapshot_t* rep_E_LOGIN_MSG_C2S_LOGIN::add_role_list() {
  // @@protoc_insertion_point(field_add:protos.rep_E_LOGIN_MSG_C2S_LOGIN.role_list)
  return role_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::protos::role_snapshot_t >*
rep_E_LOGIN_MSG_C2S_LOGIN::mutable_role_list() {
  // @@protoc_insertion_point(field_mutable_list:protos.rep_E_LOGIN_MSG_C2S_LOGIN.role_list)
  return &role_list_;
}
const ::google::protobuf::RepeatedPtrField< ::protos::role_snapshot_t >&
rep_E_LOGIN_MSG_C2S_LOGIN::role_list() const {
  // @@protoc_insertion_point(field_list:protos.rep_E_LOGIN_MSG_C2S_LOGIN.role_list)
  return role_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_E_LOGIN_MSG_GG2ROOT_LOGIN::kAccountNameFieldNumber;
const int req_E_LOGIN_MSG_GG2ROOT_LOGIN::kPswdFieldNumber;
const int req_E_LOGIN_MSG_GG2ROOT_LOGIN::kAccountIdFieldNumber;
const int req_E_LOGIN_MSG_GG2ROOT_LOGIN::kZoneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_E_LOGIN_MSG_GG2ROOT_LOGIN::req_E_LOGIN_MSG_GG2ROOT_LOGIN()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN)
}

void req_E_LOGIN_MSG_GG2ROOT_LOGIN::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

req_E_LOGIN_MSG_GG2ROOT_LOGIN::req_E_LOGIN_MSG_GG2ROOT_LOGIN(const req_E_LOGIN_MSG_GG2ROOT_LOGIN& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN)
}

void req_E_LOGIN_MSG_GG2ROOT_LOGIN::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pswd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_ = GOOGLE_LONGLONG(0);
  zone_id_ = 0;
}

req_E_LOGIN_MSG_GG2ROOT_LOGIN::~req_E_LOGIN_MSG_GG2ROOT_LOGIN() {
  // @@protoc_insertion_point(destructor:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN)
  SharedDtor();
}

void req_E_LOGIN_MSG_GG2ROOT_LOGIN::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pswd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void req_E_LOGIN_MSG_GG2ROOT_LOGIN::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_E_LOGIN_MSG_GG2ROOT_LOGIN::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return req_E_LOGIN_MSG_GG2ROOT_LOGIN_descriptor_;
}

const req_E_LOGIN_MSG_GG2ROOT_LOGIN& req_E_LOGIN_MSG_GG2ROOT_LOGIN::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protcl_5flogin_2eproto();
  return *default_instance_;
}

req_E_LOGIN_MSG_GG2ROOT_LOGIN* req_E_LOGIN_MSG_GG2ROOT_LOGIN::default_instance_ = NULL;

req_E_LOGIN_MSG_GG2ROOT_LOGIN* req_E_LOGIN_MSG_GG2ROOT_LOGIN::New(::google::protobuf::Arena* arena) const {
  req_E_LOGIN_MSG_GG2ROOT_LOGIN* n = new req_E_LOGIN_MSG_GG2ROOT_LOGIN;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_E_LOGIN_MSG_GG2ROOT_LOGIN::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(req_E_LOGIN_MSG_GG2ROOT_LOGIN, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<req_E_LOGIN_MSG_GG2ROOT_LOGIN*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(account_id_, zone_id_);
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool req_E_LOGIN_MSG_GG2ROOT_LOGIN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.account_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pswd;
        break;
      }

      // optional string pswd = 2;
      case 2: {
        if (tag == 18) {
         parse_pswd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pswd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pswd().data(), this->pswd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.pswd"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_account_id;
        break;
      }

      // optional int64 account_id = 3;
      case 3: {
        if (tag == 24) {
         parse_account_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &account_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_zone_id;
        break;
      }

      // optional int32 zone_id = 4;
      case 4: {
        if (tag == 32) {
         parse_zone_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &zone_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN)
  return false;
#undef DO_
}

void req_E_LOGIN_MSG_GG2ROOT_LOGIN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN)
  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_name(), output);
  }

  // optional string pswd = 2;
  if (this->pswd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pswd().data(), this->pswd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.pswd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pswd(), output);
  }

  // optional int64 account_id = 3;
  if (this->account_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->account_id(), output);
  }

  // optional int32 zone_id = 4;
  if (this->zone_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->zone_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN)
}

::google::protobuf::uint8* req_E_LOGIN_MSG_GG2ROOT_LOGIN::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN)
  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_name(), target);
  }

  // optional string pswd = 2;
  if (this->pswd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pswd().data(), this->pswd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.pswd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pswd(), target);
  }

  // optional int64 account_id = 3;
  if (this->account_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->account_id(), target);
  }

  // optional int32 zone_id = 4;
  if (this->zone_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->zone_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN)
  return target;
}

int req_E_LOGIN_MSG_GG2ROOT_LOGIN::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN)
  int total_size = 0;

  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_name());
  }

  // optional string pswd = 2;
  if (this->pswd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pswd());
  }

  // optional int64 account_id = 3;
  if (this->account_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->account_id());
  }

  // optional int32 zone_id = 4;
  if (this->zone_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->zone_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_E_LOGIN_MSG_GG2ROOT_LOGIN::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const req_E_LOGIN_MSG_GG2ROOT_LOGIN* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const req_E_LOGIN_MSG_GG2ROOT_LOGIN>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN)
    MergeFrom(*source);
  }
}

void req_E_LOGIN_MSG_GG2ROOT_LOGIN::MergeFrom(const req_E_LOGIN_MSG_GG2ROOT_LOGIN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.account_name().size() > 0) {

    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  if (from.pswd().size() > 0) {

    pswd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pswd_);
  }
  if (from.account_id() != 0) {
    set_account_id(from.account_id());
  }
  if (from.zone_id() != 0) {
    set_zone_id(from.zone_id());
  }
}

void req_E_LOGIN_MSG_GG2ROOT_LOGIN::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_E_LOGIN_MSG_GG2ROOT_LOGIN::CopyFrom(const req_E_LOGIN_MSG_GG2ROOT_LOGIN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_E_LOGIN_MSG_GG2ROOT_LOGIN::IsInitialized() const {

  return true;
}

void req_E_LOGIN_MSG_GG2ROOT_LOGIN::Swap(req_E_LOGIN_MSG_GG2ROOT_LOGIN* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_E_LOGIN_MSG_GG2ROOT_LOGIN::InternalSwap(req_E_LOGIN_MSG_GG2ROOT_LOGIN* other) {
  account_name_.Swap(&other->account_name_);
  pswd_.Swap(&other->pswd_);
  std::swap(account_id_, other->account_id_);
  std::swap(zone_id_, other->zone_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_E_LOGIN_MSG_GG2ROOT_LOGIN::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = req_E_LOGIN_MSG_GG2ROOT_LOGIN_descriptor_;
  metadata.reflection = req_E_LOGIN_MSG_GG2ROOT_LOGIN_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_E_LOGIN_MSG_GG2ROOT_LOGIN

// optional string account_name = 1;
void req_E_LOGIN_MSG_GG2ROOT_LOGIN::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& req_E_LOGIN_MSG_GG2ROOT_LOGIN::account_name() const {
  // @@protoc_insertion_point(field_get:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.account_name)
  return account_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void req_E_LOGIN_MSG_GG2ROOT_LOGIN::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.account_name)
}
 void req_E_LOGIN_MSG_GG2ROOT_LOGIN::set_account_name(const char* value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.account_name)
}
 void req_E_LOGIN_MSG_GG2ROOT_LOGIN::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.account_name)
}
 ::std::string* req_E_LOGIN_MSG_GG2ROOT_LOGIN::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* req_E_LOGIN_MSG_GG2ROOT_LOGIN::release_account_name() {
  // @@protoc_insertion_point(field_release:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void req_E_LOGIN_MSG_GG2ROOT_LOGIN::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.account_name)
}

// optional string pswd = 2;
void req_E_LOGIN_MSG_GG2ROOT_LOGIN::clear_pswd() {
  pswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& req_E_LOGIN_MSG_GG2ROOT_LOGIN::pswd() const {
  // @@protoc_insertion_point(field_get:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.pswd)
  return pswd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void req_E_LOGIN_MSG_GG2ROOT_LOGIN::set_pswd(const ::std::string& value) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.pswd)
}
 void req_E_LOGIN_MSG_GG2ROOT_LOGIN::set_pswd(const char* value) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.pswd)
}
 void req_E_LOGIN_MSG_GG2ROOT_LOGIN::set_pswd(const char* value, size_t size) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.pswd)
}
 ::std::string* req_E_LOGIN_MSG_GG2ROOT_LOGIN::mutable_pswd() {
  
  // @@protoc_insertion_point(field_mutable:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.pswd)
  return pswd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* req_E_LOGIN_MSG_GG2ROOT_LOGIN::release_pswd() {
  // @@protoc_insertion_point(field_release:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.pswd)
  
  return pswd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void req_E_LOGIN_MSG_GG2ROOT_LOGIN::set_allocated_pswd(::std::string* pswd) {
  if (pswd != NULL) {
    
  } else {
    
  }
  pswd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pswd);
  // @@protoc_insertion_point(field_set_allocated:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.pswd)
}

// optional int64 account_id = 3;
void req_E_LOGIN_MSG_GG2ROOT_LOGIN::clear_account_id() {
  account_id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 req_E_LOGIN_MSG_GG2ROOT_LOGIN::account_id() const {
  // @@protoc_insertion_point(field_get:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.account_id)
  return account_id_;
}
 void req_E_LOGIN_MSG_GG2ROOT_LOGIN::set_account_id(::google::protobuf::int64 value) {
  
  account_id_ = value;
  // @@protoc_insertion_point(field_set:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.account_id)
}

// optional int32 zone_id = 4;
void req_E_LOGIN_MSG_GG2ROOT_LOGIN::clear_zone_id() {
  zone_id_ = 0;
}
 ::google::protobuf::int32 req_E_LOGIN_MSG_GG2ROOT_LOGIN::zone_id() const {
  // @@protoc_insertion_point(field_get:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.zone_id)
  return zone_id_;
}
 void req_E_LOGIN_MSG_GG2ROOT_LOGIN::set_zone_id(::google::protobuf::int32 value) {
  
  zone_id_ = value;
  // @@protoc_insertion_point(field_set:protos.req_E_LOGIN_MSG_GG2ROOT_LOGIN.zone_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rep_E_LOGIN_MSG_GG2ROOT_LOGIN::kIsokFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rep_E_LOGIN_MSG_GG2ROOT_LOGIN::rep_E_LOGIN_MSG_GG2ROOT_LOGIN()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.rep_E_LOGIN_MSG_GG2ROOT_LOGIN)
}

void rep_E_LOGIN_MSG_GG2ROOT_LOGIN::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

rep_E_LOGIN_MSG_GG2ROOT_LOGIN::rep_E_LOGIN_MSG_GG2ROOT_LOGIN(const rep_E_LOGIN_MSG_GG2ROOT_LOGIN& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protos.rep_E_LOGIN_MSG_GG2ROOT_LOGIN)
}

void rep_E_LOGIN_MSG_GG2ROOT_LOGIN::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  isok_ = 0;
}

rep_E_LOGIN_MSG_GG2ROOT_LOGIN::~rep_E_LOGIN_MSG_GG2ROOT_LOGIN() {
  // @@protoc_insertion_point(destructor:protos.rep_E_LOGIN_MSG_GG2ROOT_LOGIN)
  SharedDtor();
}

void rep_E_LOGIN_MSG_GG2ROOT_LOGIN::SharedDtor() {
  if (this != default_instance_) {
  }
}

void rep_E_LOGIN_MSG_GG2ROOT_LOGIN::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rep_E_LOGIN_MSG_GG2ROOT_LOGIN::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return rep_E_LOGIN_MSG_GG2ROOT_LOGIN_descriptor_;
}

const rep_E_LOGIN_MSG_GG2ROOT_LOGIN& rep_E_LOGIN_MSG_GG2ROOT_LOGIN::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protcl_5flogin_2eproto();
  return *default_instance_;
}

rep_E_LOGIN_MSG_GG2ROOT_LOGIN* rep_E_LOGIN_MSG_GG2ROOT_LOGIN::default_instance_ = NULL;

rep_E_LOGIN_MSG_GG2ROOT_LOGIN* rep_E_LOGIN_MSG_GG2ROOT_LOGIN::New(::google::protobuf::Arena* arena) const {
  rep_E_LOGIN_MSG_GG2ROOT_LOGIN* n = new rep_E_LOGIN_MSG_GG2ROOT_LOGIN;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rep_E_LOGIN_MSG_GG2ROOT_LOGIN::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.rep_E_LOGIN_MSG_GG2ROOT_LOGIN)
  isok_ = 0;
}

bool rep_E_LOGIN_MSG_GG2ROOT_LOGIN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.rep_E_LOGIN_MSG_GG2ROOT_LOGIN)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 isok = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isok_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.rep_E_LOGIN_MSG_GG2ROOT_LOGIN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.rep_E_LOGIN_MSG_GG2ROOT_LOGIN)
  return false;
#undef DO_
}

void rep_E_LOGIN_MSG_GG2ROOT_LOGIN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.rep_E_LOGIN_MSG_GG2ROOT_LOGIN)
  // optional int32 isok = 1;
  if (this->isok() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->isok(), output);
  }

  // @@protoc_insertion_point(serialize_end:protos.rep_E_LOGIN_MSG_GG2ROOT_LOGIN)
}

::google::protobuf::uint8* rep_E_LOGIN_MSG_GG2ROOT_LOGIN::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.rep_E_LOGIN_MSG_GG2ROOT_LOGIN)
  // optional int32 isok = 1;
  if (this->isok() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->isok(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protos.rep_E_LOGIN_MSG_GG2ROOT_LOGIN)
  return target;
}

int rep_E_LOGIN_MSG_GG2ROOT_LOGIN::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protos.rep_E_LOGIN_MSG_GG2ROOT_LOGIN)
  int total_size = 0;

  // optional int32 isok = 1;
  if (this->isok() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isok());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rep_E_LOGIN_MSG_GG2ROOT_LOGIN::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.rep_E_LOGIN_MSG_GG2ROOT_LOGIN)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const rep_E_LOGIN_MSG_GG2ROOT_LOGIN* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const rep_E_LOGIN_MSG_GG2ROOT_LOGIN>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.rep_E_LOGIN_MSG_GG2ROOT_LOGIN)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.rep_E_LOGIN_MSG_GG2ROOT_LOGIN)
    MergeFrom(*source);
  }
}

void rep_E_LOGIN_MSG_GG2ROOT_LOGIN::MergeFrom(const rep_E_LOGIN_MSG_GG2ROOT_LOGIN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.rep_E_LOGIN_MSG_GG2ROOT_LOGIN)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.isok() != 0) {
    set_isok(from.isok());
  }
}

void rep_E_LOGIN_MSG_GG2ROOT_LOGIN::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.rep_E_LOGIN_MSG_GG2ROOT_LOGIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rep_E_LOGIN_MSG_GG2ROOT_LOGIN::CopyFrom(const rep_E_LOGIN_MSG_GG2ROOT_LOGIN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.rep_E_LOGIN_MSG_GG2ROOT_LOGIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rep_E_LOGIN_MSG_GG2ROOT_LOGIN::IsInitialized() const {

  return true;
}

void rep_E_LOGIN_MSG_GG2ROOT_LOGIN::Swap(rep_E_LOGIN_MSG_GG2ROOT_LOGIN* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rep_E_LOGIN_MSG_GG2ROOT_LOGIN::InternalSwap(rep_E_LOGIN_MSG_GG2ROOT_LOGIN* other) {
  std::swap(isok_, other->isok_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rep_E_LOGIN_MSG_GG2ROOT_LOGIN::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = rep_E_LOGIN_MSG_GG2ROOT_LOGIN_descriptor_;
  metadata.reflection = rep_E_LOGIN_MSG_GG2ROOT_LOGIN_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rep_E_LOGIN_MSG_GG2ROOT_LOGIN

// optional int32 isok = 1;
void rep_E_LOGIN_MSG_GG2ROOT_LOGIN::clear_isok() {
  isok_ = 0;
}
 ::google::protobuf::int32 rep_E_LOGIN_MSG_GG2ROOT_LOGIN::isok() const {
  // @@protoc_insertion_point(field_get:protos.rep_E_LOGIN_MSG_GG2ROOT_LOGIN.isok)
  return isok_;
}
 void rep_E_LOGIN_MSG_GG2ROOT_LOGIN::set_isok(::google::protobuf::int32 value) {
  
  isok_ = value;
  // @@protoc_insertion_point(field_set:protos.rep_E_LOGIN_MSG_GG2ROOT_LOGIN.isok)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::kAccountNameFieldNumber;
const int req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::kPswdFieldNumber;
const int req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::kAccountIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
}

void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK(const req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
}

void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pswd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_ = GOOGLE_LONGLONG(0);
}

req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::~req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK() {
  // @@protoc_insertion_point(destructor:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  SharedDtor();
}

void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pswd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_descriptor_;
}

const req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK& req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protcl_5flogin_2eproto();
  return *default_instance_;
}

req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK* req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::default_instance_ = NULL;

req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK* req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::New(::google::protobuf::Arena* arena) const {
  req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK* n = new req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_ = GOOGLE_LONGLONG(0);
}

bool req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.account_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pswd;
        break;
      }

      // optional string pswd = 2;
      case 2: {
        if (tag == 18) {
         parse_pswd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pswd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pswd().data(), this->pswd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.pswd"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_account_id;
        break;
      }

      // optional int64 account_id = 3;
      case 3: {
        if (tag == 24) {
         parse_account_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &account_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  return false;
#undef DO_
}

void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_name(), output);
  }

  // optional string pswd = 2;
  if (this->pswd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pswd().data(), this->pswd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.pswd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pswd(), output);
  }

  // optional int64 account_id = 3;
  if (this->account_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->account_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
}

::google::protobuf::uint8* req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_name(), target);
  }

  // optional string pswd = 2;
  if (this->pswd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pswd().data(), this->pswd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.pswd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pswd(), target);
  }

  // optional int64 account_id = 3;
  if (this->account_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->account_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  return target;
}

int req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  int total_size = 0;

  // optional string account_name = 1;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_name());
  }

  // optional string pswd = 2;
  if (this->pswd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pswd());
  }

  // optional int64 account_id = 3;
  if (this->account_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->account_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
    MergeFrom(*source);
  }
}

void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::MergeFrom(const req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.account_name().size() > 0) {

    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  if (from.pswd().size() > 0) {

    pswd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pswd_);
  }
  if (from.account_id() != 0) {
    set_account_id(from.account_id());
  }
}

void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::CopyFrom(const req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::IsInitialized() const {

  return true;
}

void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::Swap(req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::InternalSwap(req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK* other) {
  account_name_.Swap(&other->account_name_);
  pswd_.Swap(&other->pswd_);
  std::swap(account_id_, other->account_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_descriptor_;
  metadata.reflection = req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK

// optional string account_name = 1;
void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::account_name() const {
  // @@protoc_insertion_point(field_get:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.account_name)
  return account_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.account_name)
}
 void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::set_account_name(const char* value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.account_name)
}
 void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.account_name)
}
 ::std::string* req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::release_account_name() {
  // @@protoc_insertion_point(field_release:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.account_name)
}

// optional string pswd = 2;
void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::clear_pswd() {
  pswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::pswd() const {
  // @@protoc_insertion_point(field_get:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.pswd)
  return pswd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::set_pswd(const ::std::string& value) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.pswd)
}
 void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::set_pswd(const char* value) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.pswd)
}
 void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::set_pswd(const char* value, size_t size) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.pswd)
}
 ::std::string* req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::mutable_pswd() {
  
  // @@protoc_insertion_point(field_mutable:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.pswd)
  return pswd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::release_pswd() {
  // @@protoc_insertion_point(field_release:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.pswd)
  
  return pswd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::set_allocated_pswd(::std::string* pswd) {
  if (pswd != NULL) {
    
  } else {
    
  }
  pswd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pswd);
  // @@protoc_insertion_point(field_set_allocated:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.pswd)
}

// optional int64 account_id = 3;
void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::clear_account_id() {
  account_id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::account_id() const {
  // @@protoc_insertion_point(field_get:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.account_id)
  return account_id_;
}
 void req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::set_account_id(::google::protobuf::int64 value) {
  
  account_id_ = value;
  // @@protoc_insertion_point(field_set:protos.req_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.account_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::kIsokFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
}

void rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK(const rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protos.rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
}

void rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  isok_ = 0;
}

rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::~rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK() {
  // @@protoc_insertion_point(destructor:protos.rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  SharedDtor();
}

void rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_descriptor_;
}

const rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK& rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protcl_5flogin_2eproto();
  return *default_instance_;
}

rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK* rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::default_instance_ = NULL;

rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK* rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::New(::google::protobuf::Arena* arena) const {
  rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK* n = new rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  isok_ = 0;
}

bool rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 isok = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isok_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  return false;
#undef DO_
}

void rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  // optional int32 isok = 1;
  if (this->isok() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->isok(), output);
  }

  // @@protoc_insertion_point(serialize_end:protos.rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
}

::google::protobuf::uint8* rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  // optional int32 isok = 1;
  if (this->isok() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->isok(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protos.rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  return target;
}

int rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protos.rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  int total_size = 0;

  // optional int32 isok = 1;
  if (this->isok() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isok());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
    MergeFrom(*source);
  }
}

void rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::MergeFrom(const rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.isok() != 0) {
    set_isok(from.isok());
  }
}

void rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::CopyFrom(const rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::IsInitialized() const {

  return true;
}

void rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::Swap(rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::InternalSwap(rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK* other) {
  std::swap(isok_, other->isok_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_descriptor_;
  metadata.reflection = rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK

// optional int32 isok = 1;
void rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::clear_isok() {
  isok_ = 0;
}
 ::google::protobuf::int32 rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::isok() const {
  // @@protoc_insertion_point(field_get:protos.rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.isok)
  return isok_;
}
 void rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK::set_isok(::google::protobuf::int32 value) {
  
  isok_ = value;
  // @@protoc_insertion_point(field_set:protos.rep_E_LOGIN_MSG_ROOT2LOGIN_ACCT_CHECK.isok)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protos

// @@protoc_insertion_point(global_scope)

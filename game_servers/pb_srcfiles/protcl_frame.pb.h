// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protcl_frame.proto

#ifndef PROTOBUF_protcl_5fframe_2eproto__INCLUDED
#define PROTOBUF_protcl_5fframe_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protos {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_protcl_5fframe_2eproto();
void protobuf_AssignDesc_protcl_5fframe_2eproto();
void protobuf_ShutdownFile_protcl_5fframe_2eproto();

class rep_E_FRAME_MSG_NEW_SERVER_BOOTUP;
class rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST;
class rep_E_FRAME_MSG_REGISTER_SERVER_INFO;
class rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN;
class rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS;
class req_E_FRAME_MSG_NEW_SERVER_BOOTUP;
class req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST;
class req_E_FRAME_MSG_REGISTER_SERVER_INFO;
class req_E_FRAME_MSG_ROOT_TO_XS_START_RUN;
class req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS;
class server_info_t;

// ===================================================================

class server_info_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.server_info_t) */ {
 public:
  server_info_t();
  virtual ~server_info_t();

  server_info_t(const server_info_t& from);

  inline server_info_t& operator=(const server_info_t& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const server_info_t& default_instance();

  void Swap(server_info_t* other);

  // implements Message ----------------------------------------------

  inline server_info_t* New() const { return New(NULL); }

  server_info_t* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const server_info_t& from);
  void MergeFrom(const server_info_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(server_info_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 node_type = 1;
  void clear_node_type();
  static const int kNodeTypeFieldNumber = 1;
  ::google::protobuf::int32 node_type() const;
  void set_node_type(::google::protobuf::int32 value);

  // optional int32 server_type = 2;
  void clear_server_type();
  static const int kServerTypeFieldNumber = 2;
  ::google::protobuf::int32 server_type() const;
  void set_server_type(::google::protobuf::int32 value);

  // optional int32 server_index = 3;
  void clear_server_index();
  static const int kServerIndexFieldNumber = 3;
  ::google::protobuf::int32 server_index() const;
  void set_server_index(::google::protobuf::int32 value);

  // optional int32 zone_id = 4;
  void clear_zone_id();
  static const int kZoneIdFieldNumber = 4;
  ::google::protobuf::int32 zone_id() const;
  void set_zone_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.server_info_t)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 node_type_;
  ::google::protobuf::int32 server_type_;
  ::google::protobuf::int32 server_index_;
  ::google::protobuf::int32 zone_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protcl_5fframe_2eproto();
  friend void protobuf_AssignDesc_protcl_5fframe_2eproto();
  friend void protobuf_ShutdownFile_protcl_5fframe_2eproto();

  void InitAsDefaultInstance();
  static server_info_t* default_instance_;
};
// -------------------------------------------------------------------

class req_E_FRAME_MSG_REGISTER_SERVER_INFO : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.req_E_FRAME_MSG_REGISTER_SERVER_INFO) */ {
 public:
  req_E_FRAME_MSG_REGISTER_SERVER_INFO();
  virtual ~req_E_FRAME_MSG_REGISTER_SERVER_INFO();

  req_E_FRAME_MSG_REGISTER_SERVER_INFO(const req_E_FRAME_MSG_REGISTER_SERVER_INFO& from);

  inline req_E_FRAME_MSG_REGISTER_SERVER_INFO& operator=(const req_E_FRAME_MSG_REGISTER_SERVER_INFO& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const req_E_FRAME_MSG_REGISTER_SERVER_INFO& default_instance();

  void Swap(req_E_FRAME_MSG_REGISTER_SERVER_INFO* other);

  // implements Message ----------------------------------------------

  inline req_E_FRAME_MSG_REGISTER_SERVER_INFO* New() const { return New(NULL); }

  req_E_FRAME_MSG_REGISTER_SERVER_INFO* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const req_E_FRAME_MSG_REGISTER_SERVER_INFO& from);
  void MergeFrom(const req_E_FRAME_MSG_REGISTER_SERVER_INFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(req_E_FRAME_MSG_REGISTER_SERVER_INFO* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protos.server_info_t server_node = 1;
  bool has_server_node() const;
  void clear_server_node();
  static const int kServerNodeFieldNumber = 1;
  const ::protos::server_info_t& server_node() const;
  ::protos::server_info_t* mutable_server_node();
  ::protos::server_info_t* release_server_node();
  void set_allocated_server_node(::protos::server_info_t* server_node);

  // optional int32 zone_id = 2;
  void clear_zone_id();
  static const int kZoneIdFieldNumber = 2;
  ::google::protobuf::int32 zone_id() const;
  void set_zone_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.req_E_FRAME_MSG_REGISTER_SERVER_INFO)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::protos::server_info_t* server_node_;
  ::google::protobuf::int32 zone_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protcl_5fframe_2eproto();
  friend void protobuf_AssignDesc_protcl_5fframe_2eproto();
  friend void protobuf_ShutdownFile_protcl_5fframe_2eproto();

  void InitAsDefaultInstance();
  static req_E_FRAME_MSG_REGISTER_SERVER_INFO* default_instance_;
};
// -------------------------------------------------------------------

class rep_E_FRAME_MSG_REGISTER_SERVER_INFO : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.rep_E_FRAME_MSG_REGISTER_SERVER_INFO) */ {
 public:
  rep_E_FRAME_MSG_REGISTER_SERVER_INFO();
  virtual ~rep_E_FRAME_MSG_REGISTER_SERVER_INFO();

  rep_E_FRAME_MSG_REGISTER_SERVER_INFO(const rep_E_FRAME_MSG_REGISTER_SERVER_INFO& from);

  inline rep_E_FRAME_MSG_REGISTER_SERVER_INFO& operator=(const rep_E_FRAME_MSG_REGISTER_SERVER_INFO& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const rep_E_FRAME_MSG_REGISTER_SERVER_INFO& default_instance();

  void Swap(rep_E_FRAME_MSG_REGISTER_SERVER_INFO* other);

  // implements Message ----------------------------------------------

  inline rep_E_FRAME_MSG_REGISTER_SERVER_INFO* New() const { return New(NULL); }

  rep_E_FRAME_MSG_REGISTER_SERVER_INFO* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const rep_E_FRAME_MSG_REGISTER_SERVER_INFO& from);
  void MergeFrom(const rep_E_FRAME_MSG_REGISTER_SERVER_INFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(rep_E_FRAME_MSG_REGISTER_SERVER_INFO* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 isok = 1;
  void clear_isok();
  static const int kIsokFieldNumber = 1;
  ::google::protobuf::int32 isok() const;
  void set_isok(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.rep_E_FRAME_MSG_REGISTER_SERVER_INFO)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 isok_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protcl_5fframe_2eproto();
  friend void protobuf_AssignDesc_protcl_5fframe_2eproto();
  friend void protobuf_ShutdownFile_protcl_5fframe_2eproto();

  void InitAsDefaultInstance();
  static rep_E_FRAME_MSG_REGISTER_SERVER_INFO* default_instance_;
};
// -------------------------------------------------------------------

class req_E_FRAME_MSG_NEW_SERVER_BOOTUP : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.req_E_FRAME_MSG_NEW_SERVER_BOOTUP) */ {
 public:
  req_E_FRAME_MSG_NEW_SERVER_BOOTUP();
  virtual ~req_E_FRAME_MSG_NEW_SERVER_BOOTUP();

  req_E_FRAME_MSG_NEW_SERVER_BOOTUP(const req_E_FRAME_MSG_NEW_SERVER_BOOTUP& from);

  inline req_E_FRAME_MSG_NEW_SERVER_BOOTUP& operator=(const req_E_FRAME_MSG_NEW_SERVER_BOOTUP& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const req_E_FRAME_MSG_NEW_SERVER_BOOTUP& default_instance();

  void Swap(req_E_FRAME_MSG_NEW_SERVER_BOOTUP* other);

  // implements Message ----------------------------------------------

  inline req_E_FRAME_MSG_NEW_SERVER_BOOTUP* New() const { return New(NULL); }

  req_E_FRAME_MSG_NEW_SERVER_BOOTUP* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const req_E_FRAME_MSG_NEW_SERVER_BOOTUP& from);
  void MergeFrom(const req_E_FRAME_MSG_NEW_SERVER_BOOTUP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(req_E_FRAME_MSG_NEW_SERVER_BOOTUP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 node_type = 1;
  void clear_node_type();
  static const int kNodeTypeFieldNumber = 1;
  ::google::protobuf::int32 node_type() const;
  void set_node_type(::google::protobuf::int32 value);

  // optional int32 server_type = 2;
  void clear_server_type();
  static const int kServerTypeFieldNumber = 2;
  ::google::protobuf::int32 server_type() const;
  void set_server_type(::google::protobuf::int32 value);

  // optional int32 node_index = 3;
  void clear_node_index();
  static const int kNodeIndexFieldNumber = 3;
  ::google::protobuf::int32 node_index() const;
  void set_node_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.req_E_FRAME_MSG_NEW_SERVER_BOOTUP)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 node_type_;
  ::google::protobuf::int32 server_type_;
  ::google::protobuf::int32 node_index_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protcl_5fframe_2eproto();
  friend void protobuf_AssignDesc_protcl_5fframe_2eproto();
  friend void protobuf_ShutdownFile_protcl_5fframe_2eproto();

  void InitAsDefaultInstance();
  static req_E_FRAME_MSG_NEW_SERVER_BOOTUP* default_instance_;
};
// -------------------------------------------------------------------

class rep_E_FRAME_MSG_NEW_SERVER_BOOTUP : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.rep_E_FRAME_MSG_NEW_SERVER_BOOTUP) */ {
 public:
  rep_E_FRAME_MSG_NEW_SERVER_BOOTUP();
  virtual ~rep_E_FRAME_MSG_NEW_SERVER_BOOTUP();

  rep_E_FRAME_MSG_NEW_SERVER_BOOTUP(const rep_E_FRAME_MSG_NEW_SERVER_BOOTUP& from);

  inline rep_E_FRAME_MSG_NEW_SERVER_BOOTUP& operator=(const rep_E_FRAME_MSG_NEW_SERVER_BOOTUP& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const rep_E_FRAME_MSG_NEW_SERVER_BOOTUP& default_instance();

  void Swap(rep_E_FRAME_MSG_NEW_SERVER_BOOTUP* other);

  // implements Message ----------------------------------------------

  inline rep_E_FRAME_MSG_NEW_SERVER_BOOTUP* New() const { return New(NULL); }

  rep_E_FRAME_MSG_NEW_SERVER_BOOTUP* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const rep_E_FRAME_MSG_NEW_SERVER_BOOTUP& from);
  void MergeFrom(const rep_E_FRAME_MSG_NEW_SERVER_BOOTUP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(rep_E_FRAME_MSG_NEW_SERVER_BOOTUP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 isok = 1;
  void clear_isok();
  static const int kIsokFieldNumber = 1;
  ::google::protobuf::int32 isok() const;
  void set_isok(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.rep_E_FRAME_MSG_NEW_SERVER_BOOTUP)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 isok_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protcl_5fframe_2eproto();
  friend void protobuf_AssignDesc_protcl_5fframe_2eproto();
  friend void protobuf_ShutdownFile_protcl_5fframe_2eproto();

  void InitAsDefaultInstance();
  static rep_E_FRAME_MSG_NEW_SERVER_BOOTUP* default_instance_;
};
// -------------------------------------------------------------------

class req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST) */ {
 public:
  req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST();
  virtual ~req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST();

  req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST(const req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST& from);

  inline req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST& operator=(const req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST& default_instance();

  void Swap(req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST* other);

  // implements Message ----------------------------------------------

  inline req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST* New() const { return New(NULL); }

  req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST& from);
  void MergeFrom(const req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 node_type = 1;
  void clear_node_type();
  static const int kNodeTypeFieldNumber = 1;
  ::google::protobuf::int32 node_type() const;
  void set_node_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 node_type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protcl_5fframe_2eproto();
  friend void protobuf_AssignDesc_protcl_5fframe_2eproto();
  friend void protobuf_ShutdownFile_protcl_5fframe_2eproto();

  void InitAsDefaultInstance();
  static req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST* default_instance_;
};
// -------------------------------------------------------------------

class rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST) */ {
 public:
  rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST();
  virtual ~rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST();

  rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST(const rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST& from);

  inline rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST& operator=(const rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST& default_instance();

  void Swap(rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST* other);

  // implements Message ----------------------------------------------

  inline rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST* New() const { return New(NULL); }

  rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST& from);
  void MergeFrom(const rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 isok = 1;
  void clear_isok();
  static const int kIsokFieldNumber = 1;
  ::google::protobuf::int32 isok() const;
  void set_isok(::google::protobuf::int32 value);

  // repeated .protos.server_info_t server_list = 2;
  int server_list_size() const;
  void clear_server_list();
  static const int kServerListFieldNumber = 2;
  const ::protos::server_info_t& server_list(int index) const;
  ::protos::server_info_t* mutable_server_list(int index);
  ::protos::server_info_t* add_server_list();
  ::google::protobuf::RepeatedPtrField< ::protos::server_info_t >*
      mutable_server_list();
  const ::google::protobuf::RepeatedPtrField< ::protos::server_info_t >&
      server_list() const;

  // @@protoc_insertion_point(class_scope:protos.rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::protos::server_info_t > server_list_;
  ::google::protobuf::int32 isok_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protcl_5fframe_2eproto();
  friend void protobuf_AssignDesc_protcl_5fframe_2eproto();
  friend void protobuf_ShutdownFile_protcl_5fframe_2eproto();

  void InitAsDefaultInstance();
  static rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST* default_instance_;
};
// -------------------------------------------------------------------

class req_E_FRAME_MSG_ROOT_TO_XS_START_RUN : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.req_E_FRAME_MSG_ROOT_TO_XS_START_RUN) */ {
 public:
  req_E_FRAME_MSG_ROOT_TO_XS_START_RUN();
  virtual ~req_E_FRAME_MSG_ROOT_TO_XS_START_RUN();

  req_E_FRAME_MSG_ROOT_TO_XS_START_RUN(const req_E_FRAME_MSG_ROOT_TO_XS_START_RUN& from);

  inline req_E_FRAME_MSG_ROOT_TO_XS_START_RUN& operator=(const req_E_FRAME_MSG_ROOT_TO_XS_START_RUN& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const req_E_FRAME_MSG_ROOT_TO_XS_START_RUN& default_instance();

  void Swap(req_E_FRAME_MSG_ROOT_TO_XS_START_RUN* other);

  // implements Message ----------------------------------------------

  inline req_E_FRAME_MSG_ROOT_TO_XS_START_RUN* New() const { return New(NULL); }

  req_E_FRAME_MSG_ROOT_TO_XS_START_RUN* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const req_E_FRAME_MSG_ROOT_TO_XS_START_RUN& from);
  void MergeFrom(const req_E_FRAME_MSG_ROOT_TO_XS_START_RUN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(req_E_FRAME_MSG_ROOT_TO_XS_START_RUN* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protos.req_E_FRAME_MSG_ROOT_TO_XS_START_RUN)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protcl_5fframe_2eproto();
  friend void protobuf_AssignDesc_protcl_5fframe_2eproto();
  friend void protobuf_ShutdownFile_protcl_5fframe_2eproto();

  void InitAsDefaultInstance();
  static req_E_FRAME_MSG_ROOT_TO_XS_START_RUN* default_instance_;
};
// -------------------------------------------------------------------

class rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN) */ {
 public:
  rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN();
  virtual ~rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN();

  rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN(const rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN& from);

  inline rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN& operator=(const rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN& default_instance();

  void Swap(rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN* other);

  // implements Message ----------------------------------------------

  inline rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN* New() const { return New(NULL); }

  rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN& from);
  void MergeFrom(const rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 isok = 1;
  void clear_isok();
  static const int kIsokFieldNumber = 1;
  ::google::protobuf::int32 isok() const;
  void set_isok(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 isok_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protcl_5fframe_2eproto();
  friend void protobuf_AssignDesc_protcl_5fframe_2eproto();
  friend void protobuf_ShutdownFile_protcl_5fframe_2eproto();

  void InitAsDefaultInstance();
  static rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN* default_instance_;
};
// -------------------------------------------------------------------

class req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS) */ {
 public:
  req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS();
  virtual ~req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS();

  req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS(const req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS& from);

  inline req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS& operator=(const req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS& default_instance();

  void Swap(req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS* other);

  // implements Message ----------------------------------------------

  inline req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS* New() const { return New(NULL); }

  req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS& from);
  void MergeFrom(const req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 node_type = 1;
  void clear_node_type();
  static const int kNodeTypeFieldNumber = 1;
  ::google::protobuf::int32 node_type() const;
  void set_node_type(::google::protobuf::int32 value);

  // optional int32 node_index = 2;
  void clear_node_index();
  static const int kNodeIndexFieldNumber = 2;
  ::google::protobuf::int32 node_index() const;
  void set_node_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 node_type_;
  ::google::protobuf::int32 node_index_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protcl_5fframe_2eproto();
  friend void protobuf_AssignDesc_protcl_5fframe_2eproto();
  friend void protobuf_ShutdownFile_protcl_5fframe_2eproto();

  void InitAsDefaultInstance();
  static req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS* default_instance_;
};
// -------------------------------------------------------------------

class rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS) */ {
 public:
  rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS();
  virtual ~rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS();

  rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS(const rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS& from);

  inline rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS& operator=(const rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS& default_instance();

  void Swap(rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS* other);

  // implements Message ----------------------------------------------

  inline rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS* New() const { return New(NULL); }

  rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS& from);
  void MergeFrom(const rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 isok = 1;
  void clear_isok();
  static const int kIsokFieldNumber = 1;
  ::google::protobuf::int32 isok() const;
  void set_isok(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 isok_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protcl_5fframe_2eproto();
  friend void protobuf_AssignDesc_protcl_5fframe_2eproto();
  friend void protobuf_ShutdownFile_protcl_5fframe_2eproto();

  void InitAsDefaultInstance();
  static rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// server_info_t

// optional int32 node_type = 1;
inline void server_info_t::clear_node_type() {
  node_type_ = 0;
}
inline ::google::protobuf::int32 server_info_t::node_type() const {
  // @@protoc_insertion_point(field_get:protos.server_info_t.node_type)
  return node_type_;
}
inline void server_info_t::set_node_type(::google::protobuf::int32 value) {
  
  node_type_ = value;
  // @@protoc_insertion_point(field_set:protos.server_info_t.node_type)
}

// optional int32 server_type = 2;
inline void server_info_t::clear_server_type() {
  server_type_ = 0;
}
inline ::google::protobuf::int32 server_info_t::server_type() const {
  // @@protoc_insertion_point(field_get:protos.server_info_t.server_type)
  return server_type_;
}
inline void server_info_t::set_server_type(::google::protobuf::int32 value) {
  
  server_type_ = value;
  // @@protoc_insertion_point(field_set:protos.server_info_t.server_type)
}

// optional int32 server_index = 3;
inline void server_info_t::clear_server_index() {
  server_index_ = 0;
}
inline ::google::protobuf::int32 server_info_t::server_index() const {
  // @@protoc_insertion_point(field_get:protos.server_info_t.server_index)
  return server_index_;
}
inline void server_info_t::set_server_index(::google::protobuf::int32 value) {
  
  server_index_ = value;
  // @@protoc_insertion_point(field_set:protos.server_info_t.server_index)
}

// optional int32 zone_id = 4;
inline void server_info_t::clear_zone_id() {
  zone_id_ = 0;
}
inline ::google::protobuf::int32 server_info_t::zone_id() const {
  // @@protoc_insertion_point(field_get:protos.server_info_t.zone_id)
  return zone_id_;
}
inline void server_info_t::set_zone_id(::google::protobuf::int32 value) {
  
  zone_id_ = value;
  // @@protoc_insertion_point(field_set:protos.server_info_t.zone_id)
}

// -------------------------------------------------------------------

// req_E_FRAME_MSG_REGISTER_SERVER_INFO

// optional .protos.server_info_t server_node = 1;
inline bool req_E_FRAME_MSG_REGISTER_SERVER_INFO::has_server_node() const {
  return !_is_default_instance_ && server_node_ != NULL;
}
inline void req_E_FRAME_MSG_REGISTER_SERVER_INFO::clear_server_node() {
  if (GetArenaNoVirtual() == NULL && server_node_ != NULL) delete server_node_;
  server_node_ = NULL;
}
inline const ::protos::server_info_t& req_E_FRAME_MSG_REGISTER_SERVER_INFO::server_node() const {
  // @@protoc_insertion_point(field_get:protos.req_E_FRAME_MSG_REGISTER_SERVER_INFO.server_node)
  return server_node_ != NULL ? *server_node_ : *default_instance_->server_node_;
}
inline ::protos::server_info_t* req_E_FRAME_MSG_REGISTER_SERVER_INFO::mutable_server_node() {
  
  if (server_node_ == NULL) {
    server_node_ = new ::protos::server_info_t;
  }
  // @@protoc_insertion_point(field_mutable:protos.req_E_FRAME_MSG_REGISTER_SERVER_INFO.server_node)
  return server_node_;
}
inline ::protos::server_info_t* req_E_FRAME_MSG_REGISTER_SERVER_INFO::release_server_node() {
  // @@protoc_insertion_point(field_release:protos.req_E_FRAME_MSG_REGISTER_SERVER_INFO.server_node)
  
  ::protos::server_info_t* temp = server_node_;
  server_node_ = NULL;
  return temp;
}
inline void req_E_FRAME_MSG_REGISTER_SERVER_INFO::set_allocated_server_node(::protos::server_info_t* server_node) {
  delete server_node_;
  server_node_ = server_node;
  if (server_node) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protos.req_E_FRAME_MSG_REGISTER_SERVER_INFO.server_node)
}

// optional int32 zone_id = 2;
inline void req_E_FRAME_MSG_REGISTER_SERVER_INFO::clear_zone_id() {
  zone_id_ = 0;
}
inline ::google::protobuf::int32 req_E_FRAME_MSG_REGISTER_SERVER_INFO::zone_id() const {
  // @@protoc_insertion_point(field_get:protos.req_E_FRAME_MSG_REGISTER_SERVER_INFO.zone_id)
  return zone_id_;
}
inline void req_E_FRAME_MSG_REGISTER_SERVER_INFO::set_zone_id(::google::protobuf::int32 value) {
  
  zone_id_ = value;
  // @@protoc_insertion_point(field_set:protos.req_E_FRAME_MSG_REGISTER_SERVER_INFO.zone_id)
}

// -------------------------------------------------------------------

// rep_E_FRAME_MSG_REGISTER_SERVER_INFO

// optional int32 isok = 1;
inline void rep_E_FRAME_MSG_REGISTER_SERVER_INFO::clear_isok() {
  isok_ = 0;
}
inline ::google::protobuf::int32 rep_E_FRAME_MSG_REGISTER_SERVER_INFO::isok() const {
  // @@protoc_insertion_point(field_get:protos.rep_E_FRAME_MSG_REGISTER_SERVER_INFO.isok)
  return isok_;
}
inline void rep_E_FRAME_MSG_REGISTER_SERVER_INFO::set_isok(::google::protobuf::int32 value) {
  
  isok_ = value;
  // @@protoc_insertion_point(field_set:protos.rep_E_FRAME_MSG_REGISTER_SERVER_INFO.isok)
}

// -------------------------------------------------------------------

// req_E_FRAME_MSG_NEW_SERVER_BOOTUP

// optional int32 node_type = 1;
inline void req_E_FRAME_MSG_NEW_SERVER_BOOTUP::clear_node_type() {
  node_type_ = 0;
}
inline ::google::protobuf::int32 req_E_FRAME_MSG_NEW_SERVER_BOOTUP::node_type() const {
  // @@protoc_insertion_point(field_get:protos.req_E_FRAME_MSG_NEW_SERVER_BOOTUP.node_type)
  return node_type_;
}
inline void req_E_FRAME_MSG_NEW_SERVER_BOOTUP::set_node_type(::google::protobuf::int32 value) {
  
  node_type_ = value;
  // @@protoc_insertion_point(field_set:protos.req_E_FRAME_MSG_NEW_SERVER_BOOTUP.node_type)
}

// optional int32 server_type = 2;
inline void req_E_FRAME_MSG_NEW_SERVER_BOOTUP::clear_server_type() {
  server_type_ = 0;
}
inline ::google::protobuf::int32 req_E_FRAME_MSG_NEW_SERVER_BOOTUP::server_type() const {
  // @@protoc_insertion_point(field_get:protos.req_E_FRAME_MSG_NEW_SERVER_BOOTUP.server_type)
  return server_type_;
}
inline void req_E_FRAME_MSG_NEW_SERVER_BOOTUP::set_server_type(::google::protobuf::int32 value) {
  
  server_type_ = value;
  // @@protoc_insertion_point(field_set:protos.req_E_FRAME_MSG_NEW_SERVER_BOOTUP.server_type)
}

// optional int32 node_index = 3;
inline void req_E_FRAME_MSG_NEW_SERVER_BOOTUP::clear_node_index() {
  node_index_ = 0;
}
inline ::google::protobuf::int32 req_E_FRAME_MSG_NEW_SERVER_BOOTUP::node_index() const {
  // @@protoc_insertion_point(field_get:protos.req_E_FRAME_MSG_NEW_SERVER_BOOTUP.node_index)
  return node_index_;
}
inline void req_E_FRAME_MSG_NEW_SERVER_BOOTUP::set_node_index(::google::protobuf::int32 value) {
  
  node_index_ = value;
  // @@protoc_insertion_point(field_set:protos.req_E_FRAME_MSG_NEW_SERVER_BOOTUP.node_index)
}

// -------------------------------------------------------------------

// rep_E_FRAME_MSG_NEW_SERVER_BOOTUP

// optional int32 isok = 1;
inline void rep_E_FRAME_MSG_NEW_SERVER_BOOTUP::clear_isok() {
  isok_ = 0;
}
inline ::google::protobuf::int32 rep_E_FRAME_MSG_NEW_SERVER_BOOTUP::isok() const {
  // @@protoc_insertion_point(field_get:protos.rep_E_FRAME_MSG_NEW_SERVER_BOOTUP.isok)
  return isok_;
}
inline void rep_E_FRAME_MSG_NEW_SERVER_BOOTUP::set_isok(::google::protobuf::int32 value) {
  
  isok_ = value;
  // @@protoc_insertion_point(field_set:protos.rep_E_FRAME_MSG_NEW_SERVER_BOOTUP.isok)
}

// -------------------------------------------------------------------

// req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST

// optional int32 node_type = 1;
inline void req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST::clear_node_type() {
  node_type_ = 0;
}
inline ::google::protobuf::int32 req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST::node_type() const {
  // @@protoc_insertion_point(field_get:protos.req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST.node_type)
  return node_type_;
}
inline void req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST::set_node_type(::google::protobuf::int32 value) {
  
  node_type_ = value;
  // @@protoc_insertion_point(field_set:protos.req_E_FRAME_MSG_QUERY_SERVER_NODE_LIST.node_type)
}

// -------------------------------------------------------------------

// rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST

// optional int32 isok = 1;
inline void rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST::clear_isok() {
  isok_ = 0;
}
inline ::google::protobuf::int32 rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST::isok() const {
  // @@protoc_insertion_point(field_get:protos.rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST.isok)
  return isok_;
}
inline void rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST::set_isok(::google::protobuf::int32 value) {
  
  isok_ = value;
  // @@protoc_insertion_point(field_set:protos.rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST.isok)
}

// repeated .protos.server_info_t server_list = 2;
inline int rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST::server_list_size() const {
  return server_list_.size();
}
inline void rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST::clear_server_list() {
  server_list_.Clear();
}
inline const ::protos::server_info_t& rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST::server_list(int index) const {
  // @@protoc_insertion_point(field_get:protos.rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST.server_list)
  return server_list_.Get(index);
}
inline ::protos::server_info_t* rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST::mutable_server_list(int index) {
  // @@protoc_insertion_point(field_mutable:protos.rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST.server_list)
  return server_list_.Mutable(index);
}
inline ::protos::server_info_t* rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST::add_server_list() {
  // @@protoc_insertion_point(field_add:protos.rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST.server_list)
  return server_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protos::server_info_t >*
rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST::mutable_server_list() {
  // @@protoc_insertion_point(field_mutable_list:protos.rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST.server_list)
  return &server_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::server_info_t >&
rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST::server_list() const {
  // @@protoc_insertion_point(field_list:protos.rep_E_FRAME_MSG_QUERY_SERVER_NODE_LIST.server_list)
  return server_list_;
}

// -------------------------------------------------------------------

// req_E_FRAME_MSG_ROOT_TO_XS_START_RUN

// -------------------------------------------------------------------

// rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN

// optional int32 isok = 1;
inline void rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN::clear_isok() {
  isok_ = 0;
}
inline ::google::protobuf::int32 rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN::isok() const {
  // @@protoc_insertion_point(field_get:protos.rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN.isok)
  return isok_;
}
inline void rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN::set_isok(::google::protobuf::int32 value) {
  
  isok_ = value;
  // @@protoc_insertion_point(field_set:protos.rep_E_FRAME_MSG_ROOT_TO_XS_START_RUN.isok)
}

// -------------------------------------------------------------------

// req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS

// optional int32 node_type = 1;
inline void req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS::clear_node_type() {
  node_type_ = 0;
}
inline ::google::protobuf::int32 req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS::node_type() const {
  // @@protoc_insertion_point(field_get:protos.req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS.node_type)
  return node_type_;
}
inline void req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS::set_node_type(::google::protobuf::int32 value) {
  
  node_type_ = value;
  // @@protoc_insertion_point(field_set:protos.req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS.node_type)
}

// optional int32 node_index = 2;
inline void req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS::clear_node_index() {
  node_index_ = 0;
}
inline ::google::protobuf::int32 req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS::node_index() const {
  // @@protoc_insertion_point(field_get:protos.req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS.node_index)
  return node_index_;
}
inline void req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS::set_node_index(::google::protobuf::int32 value) {
  
  node_index_ = value;
  // @@protoc_insertion_point(field_set:protos.req_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS.node_index)
}

// -------------------------------------------------------------------

// rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS

// optional int32 isok = 1;
inline void rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS::clear_isok() {
  isok_ = 0;
}
inline ::google::protobuf::int32 rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS::isok() const {
  // @@protoc_insertion_point(field_get:protos.rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS.isok)
  return isok_;
}
inline void rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS::set_isok(::google::protobuf::int32 value) {
  
  isok_ = value;
  // @@protoc_insertion_point(field_set:protos.rep_E_FRAME_MSG_XS_TO_ROOT_WAIT_OTHERS.isok)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protcl_5fframe_2eproto__INCLUDED
